# -------------------------------------										
# Park Print Head
# -------------------------------------										
[gcode_macro _UL_PARK_START]
variable_last_x: 0                      ; only for internal use
variable_last_y: 0                      ; only for internal use
variable_absolute_coordinates: True     ; only for internal use
gcode:
    {% set parking = printer['gcode_macro _UL_PARKING'] %}
    {% set session = printer['gcode_macro _UL_SESSION'] %}

    SET_GCODE_VARIABLE MACRO=_UL_PARK_START VARIABLE=absolute_coordinates VALUE={printer.gcode_move.absolute_coordinates}
    SET_GCODE_VARIABLE MACRO=_UL_RETRACTION_START VARIABLE=absolute_extrude VALUE={printer.gcode_move.absolute_extrude}
    {% if parking.enabled %}
        G90
        {% if "xyz" not in printer.toolhead.homed_axes %}
            {action_respond_info("Axis not homed!")}
        {% else %}
            SET_GCODE_VARIABLE MACRO=_UL_PARK_START VARIABLE=last_x VALUE={printer.toolhead.position.x|float}
            SET_GCODE_VARIABLE MACRO=_UL_PARK_START VARIABLE=last_y VALUE={printer.toolhead.position.y|float}
            _UL_MOVE_PRINT_HEAD_Z
            _UL_MOVE_PRINT_HEAD_XY
        {% endif %}
        M400
    {% endif %}


[gcode_macro _UL_PARK_END]
gcode:
    {% set parking = printer['gcode_macro _UL_PARKING'] %}
    {% set park_start = printer['gcode_macro _UL_PARK_START'] %}

    {% if parking.enabled %}
        G0 X{park_start.last_x|float} Y{park_start.last_y|float} F{parking.travel_speed|int * 60}
        {% if park_start.absolute_coordinates == False %} 
            G91
        {% endif %}
    {% endif %}


# -------------------------------------										
# Calculate Print Head XY position
# -------------------------------------										
[gcode_macro _UL_MOVE_PRINT_HEAD_XY]
variable_horizontal_movements_count: 0
variable_horizontal_movements_current: 0
variable_horizontal_movements_step: 0
variable_horizontal_movements_steps: 30
variable_horizontal_movements_direction: 0
gcode:
    {% set self = printer['gcode_macro _UL_MOVE_PRINT_HEAD_XY'] %}
    {% set session = printer['gcode_macro _UL_SESSION'] %}
    {% set parking = printer['gcode_macro _UL_PARKING'] %}

    {% set park_x = 0 %}
    {% set park_y = 0 %}
    {% set park_z = 0 %}

    {% if parking.animation_mode == 'Static_Behind_Object' %}
        {% set park_x = session.print_max_x|float - (session.print_max_x|float - session.print_min_x|float) / 2 %}
        {% set park_y = session.print_max_y|float %}
        {% if (park_y + parking.y_offset) <= printer.toolhead.axis_maximum.y %}
            {% set park_y = park_y + parking.y_offset %}
        {% endif %}
    {% endif %}

    {% if parking.animation_mode == 'Horizontal_Movements' %}

        {% if self.horizontal_movements_count == 0 %}
            SET_GCODE_VARIABLE MACRO=_UL_MOVE_PRINT_HEAD_XY VARIABLE=horizontal_movements_step VALUE=0
            SET_GCODE_VARIABLE MACRO=_UL_MOVE_PRINT_HEAD_XY VARIABLE=horizontal_movements_current VALUE=0
            SET_GCODE_VARIABLE MACRO=_UL_MOVE_PRINT_HEAD_XY VARIABLE=horizontal_movements_direction VALUE=0
            SET_GCODE_VARIABLE MACRO=_UL_MOVE_PRINT_HEAD_XY VARIABLE=horizontal_movements_count VALUE={(session.layer_count / self.horizontal_movements_steps)|int}
        {% endif %}

        {% set MAX = (session.print_max_x - session.print_min_x)|float %}
        {% set STEP = (MAX / self.horizontal_movements_steps)|float %}

        {% if self.horizontal_movements_direction == 0 %}
            # left -> right
            {% set park_x = (session.print_min_x + STEP * self.horizontal_movements_step)|float %}
            SET_GCODE_VARIABLE MACRO=_UL_MOVE_PRINT_HEAD_XY VARIABLE=horizontal_movements_step VALUE={self.horizontal_movements_step + 1}
            {% if self.horizontal_movements_step >= self.horizontal_movements_steps %}
                SET_GCODE_VARIABLE MACRO=_UL_MOVE_PRINT_HEAD_XY VARIABLE=horizontal_movements_step VALUE=0
                SET_GCODE_VARIABLE MACRO=_UL_MOVE_PRINT_HEAD_XY VARIABLE=horizontal_movements_direction VALUE=1
            {% endif %}
        {% else %}
            {% if self.horizontal_movements_direction == 1 %}
                # right -> left
                {% set park_x = (session.print_max_x - STEP * self.horizontal_movements_step)|float %}
                SET_GCODE_VARIABLE MACRO=_UL_MOVE_PRINT_HEAD_XY VARIABLE=horizontal_movements_step VALUE={self.horizontal_movements_step + 1}
                {% if self.horizontal_movements_step >= self.horizontal_movements_steps %}
                    SET_GCODE_VARIABLE MACRO=_UL_MOVE_PRINT_HEAD_XY VARIABLE=horizontal_movements_step VALUE=0
                    SET_GCODE_VARIABLE MACRO=_UL_MOVE_PRINT_HEAD_XY VARIABLE=horizontal_movements_direction VALUE=0
                {% endif %}
            {% endif %}
        {% endif %}

        {% set park_y = session.print_max_y|float - (session.print_max_y|float - session.print_min_y|float) / 2 %}
        {% if (park_y + parking.y_offset) <= printer.toolhead.axis_maximum.y %}
            {% set park_y = park_y + parking.y_offset %}
        {% endif %}

    {% endif %}

    G0 X{park_x} Y{park_y} F{parking.travel_speed|int * 60}


# -------------------------------------										
# Calculate Print Head Z position
# -------------------------------------										
[gcode_macro _UL_MOVE_PRINT_HEAD_Z]
variable_horizontal_movements_count: 0
variable_horizontal_movements_current: 0
variable_horizontal_movements_steps: 30
gcode:
    {% set parking = printer['gcode_macro _UL_PARKING'] %}

    {% set max_z = printer.toolhead.axis_maximum.z %}
    {% set park_z = parking.lift_distance %}
    {% set act_z = printer.toolhead.position.z %}
    {% if (act_z|float + park_z|float) < max_z|float %}
        {% set park_z = (act_z|float + park_z|float) %}
    {% else %}
        {% set park_z = max_z %}
    {% endif %}

    G0 Z{park_z} F{parking.lift_speed|int * 60}
